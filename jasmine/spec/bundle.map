{"version":3,"sources":["webpack:///webpack/bootstrap 69f996cfaa3b65062808","webpack:///./jasmine/spec/inverted-index-test.js","webpack:///./src/inverted-index.js","webpack:///./jasmine/books.json"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACrCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA,oEAAmE,sCAAsC;AACzG,MAAK;AACL;AACA;AACA,MAAK;AACL,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,MAAK;;AAEL,EAAC,E;;;;;;ACrFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB,GAAG,gBAAgB;AAC7D;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,G","file":"69f996cfaa3b65062808.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 69f996cfaa3b65062808","\nconst index = require('../../src/inverted-index');\n\nconst book = require('../books.json');\n\ndescribe('constructor', () => {\n    const invertedIndex = new index();\n    invertedIndex.createIndex(book);\n    it('invertedIndex is an instance of index class', () => {\n       expect(invertedIndex).toEqual(jasmine.any(Object));\n    });\n});\n\ndescribe('createIndex', () => {\n     invertedIndex = new index();\n     invertedIndex.createIndex(book);\n    it('creates index', () => {\n\n        //expect(invertedIndex.createIndex(book).a).toEqual([0,1])\n    });\n    it('Saves the lenght of the documents', () => {\n        expect(invertedIndex.docCount).toEqual(2);\n    });\n});\n\ndescribe('Read Book', () => {\n    invertedIndex = new index();\n    invertedIndex.createIndex(book);\n    it('Ensure file content is a valid json file', () => {\n        expect(invertedIndex.isValid(book)).toBe(true);\n    });\n});\n\ndescribe('Get Index', () => {\n    invertedIndex = new index();\n    invertedIndex.createIndex(book);\n    it('returns an object that is an accurate index of the content of the JSON file', () => {\n        expect(invertedIndex.getIndex()).toEqual(jasmine.any(Object));\n    });\n});\n\ndescribe('Tokenize', () => {\n    invertedIndex = new index();\n    it('Removes special characters', () => {\n        expect(invertedIndex.tokenize('alice !!!!, hello, world')).toEqual([ 'alice', 'hello', 'world' ]);\n        expect(invertedIndex.tokenize('Today is **!!')).toEqual([ 'today', 'is']);\n    });\n    it('Removes duplicates', () => {\n        expect(invertedIndex.tokenize('alice , alice, jane')).toEqual(['alice', 'jane']);\n    });\n    it('Creates an array of tokens', () => {\n        expect(invertedIndex.tokenize(book[0].title)).toEqual(['alice', 'in', 'wonderland']);\n    });\n});\n\ndescribe('Search Index', () => {\n    invertedIndex = new index();\n    invertedIndex.createIndex(book);\n    it('returns an Array of numbers', () => {\n        expect(invertedIndex.searchIndex().of).toEqual([0,1]);\n    });\n    it('returns the index for the term searched', () => {\n        expect(invertedIndex.searchIndex().of).toEqual([0,1]);\n        expect(invertedIndex.searchIndex().alice).toEqual([0]);\n    });\n    it('searchIndex can handle an array of search terms', () => {\n        expect(invertedIndex.searchIndex('alice in the')).toEqual({ alice: [ 0 ], in: [ 0 ], the: [ 1 ] });\n    });\n    it('returns an error message if search query not found', () => {\n        expect(invertedIndex.searchIndex('rose')).toEqual('Search Query Not Found');\n    });\n});\n\n\ndescribe('Populate Index', () => {\n    invertedIndex = new index();\n    invertedIndex.createIndex(book);\n    it('verifies index is created once JSON is read', () => {\n        expect(invertedIndex.fileMap).toEqual(jasmine.any(Object));\n    });\n    it('ensures index is correct', () => {\n\n        expect(invertedIndex.fileMap.alice).toEqual([0]);\n    });\n\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/spec/inverted-index-test.js\n// module id = 0\n// module chunks = 0","/**\n * Index class\n * @class\n */\nclass index {\n  /**\n   * class constructor\n   * @constructor\n   */\n  constructor() {\n    this.fileMap = {};\n  }\n\n  /**\n   * removes special characters, white spaces and duplicates\n   * @function\n   * @param {string} text document title and text\n   * @return {Array} tokens\n   */\n  tokenize(text) {\n    const unique = [];\n    const token = text.toLowerCase().replace(/[^\\w\\s]/gi, '').match(/\\w+/g);\n    token.forEach((item) => {\n      if (!unique.includes(item)) {\n        unique.push(item);\n      }\n    });\n    return unique;\n  }\n\n  /**\n   * create index\n   * @function\n   * @param {Array} fileContent objects in an Array\n   * @return {Object} index object\n   */\n  createIndex(fileContent) {\n    this.docCount = [];\n    for (const object in fileContent) {\n      this.docCount.push(parseInt(object, 10));\n    }\n    fileContent.forEach((fileObject, docTag) => {\n      const content = `${fileObject.title} ${fileObject.text}`;\n      const token = this.tokenize(content);\n      token.forEach((item) => {\n        if (item in this.fileMap) {\n          this.fileMap[item].push(docTag);\n        } else {\n          this.fileMap[item] = [];\n          this.fileMap[item].push(docTag);\n        }\n      });\n    });\n    return this.fileMap;\n  }\n  /**\n   * Get index\n   * @function\n   * @return {Object} index object\n   */\n  getIndex() {\n    return this.fileMap;\n  }\n  /**\n   * Search Index\n   * @function\n   * @param {string} query string being searched\n   * @return {Object} search result is returned\n   */\n  searchIndex(query) {\n    const result = {};\n    if (query === undefined) {\n      return this.fileMap;\n    }\n    const search = query.split(' ');\n    search.forEach((word) => {\n      if (this.fileMap[word]) {\n        result[word] = this.fileMap[word];\n      }\n    });\n    return Object.keys(result).length > 0 ? result : 'Search Query Not Found';\n  }\n\n  /**\n   * isValid\n   * @function\n   * @param {Array} fileContent\n   * @return {boolean} statement is returned\n   */\n  isValid(fileContent) {\n    if (!fileContent[0] && fileContent[0].title) {\n      return false;\n    }\n    return true;\n  }\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/inverted-index.js\n// module id = 1\n// module chunks = 0","module.exports = [\n\t{\n\t\t\"title\": \"Alice in Wonderland\",\n\t\t\"text\": \"Alice falls into a rabbit hole and enters a world full of imagination.\"\n\t},\n\t{\n\t\t\"title\": \"The Lord of the Rings: The Fellowship of the Ring.\",\n\t\t\"text\": \"An unusual alliance of man, elf, dwarf, wizard and hobbit seek to destroy a powerful ring.\"\n\t}\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./jasmine/books.json\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}